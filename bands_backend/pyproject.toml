[tool.poetry]
name = "bands_backend"
version = "0.1.0"
description = ""
authors = ["Riccardo Campo <riccardocampo@tutanota.com>"]
license = "GPL-3.0"

[tool.poetry.dependencies]
python = "^3.11"
django = "^5.1"
mysqlclient = "^2.2.4"
python-dotenv = "^1.0.1"
django-rest-framework = "^0.1.0"
gunicorn = "^23.0.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.3"
black = "^24.8.0"
isort = "^5.13.2"
mypy = "^1.11.2"
flake8 = "^7.1.1"
bandit = "^1.7.9"
django-stubs = "^5.0.4"
djangorestframework-stubs = "^3.15.0"
pytest = "^8.3.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests/unit",
]

[tool.black]
line-length = "119"
target-version = ["py311"]

[tool.ruff]
cache-dir = ".cache/.ruff"
lint.select = ["C", "E", "F", "W", "D"]
lint.ignore = ["D100", "D104", "D200", "D202", "D203", "D212"]
line-length = 119
exclude = [
    ".linters",
    ".env",
    ".env.example",
    ".gitignore",
    "poetry.lock",
    "pyproject.toml",
    "Makefile",
]
target-version = "py311"

[tool.isort]
py_version = 311
skip_glob = "_init__.py"
line_length = 119
multi_line_output = 3
combine_as_imports = true
include_trailing_comma = true

[tool.mypy]
python_version = 3.11
incremental = true
cache_dir = ".cache/mypy"
color_output = true
pretty = true
show_error_context = true
show_error_codes = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
disallow_untyped_defs = true
check_untyped_defs = true
implicit_reexport = true
plugins = "mypy_django_plugin.main"

[tool.django-stubs]
django_settings_module = "bands_backend.settings"
